Todo:

(MED+) eliminate typecasting, use TreeMap<String, Material> and TreeMap<String, Craftable>?
	make sure to check for workbook that isnt in material

(MED) Am I discarding a bunch of CraftBuilder objects everywhere?
(MED) ItemInfoPanel currently breaks when trying to parse double of a string containing comma
			[example - parseDouble(1,000.5)]
(MED) figure out way to automate/whatever craftTable colors (pass array of arrays?)
(MED) deck-type GUIManager frame to set up for different tools
(MED) figure out how to set up a test class/method

(MED-) eldest component update = max(focus'd item + recipe items)
(MED-) return list of best profit ratios of everything
(MED-) return list of best profit ratio by maxworkload
(MED-) Consider DefaultListModel for craftintopanel.java
(MED-) setter in GUIManager for all the colors in different gui panels

(LOW) object streams for save/load
(LOW) gui to allow putting in new items through program
(LOW) change gui to be based on window size/variables, change layout from border to something else
(LOW) better Item.toString()?

(LOW-) log of price changes for items
(LOW-) weird things can happen when messing around with keyboard directional keys

(forever) add recipes
(forever) make the code less ugly, figure out public/private, less public static
(forever) comment more.
(forever) probably needless number of strings/objects created and garbage collected at the moment

(???) currently entering recipes by hand = many chances to make a mistake...
		try putting all the recipes into various xmls/database type things outside of java?
~~~

Probable things slowing down program most:
ColorRenderer.java for CraftIntopanel.java

~~~

Possible problems:

What if there is a craft book that needs to be converted into a craftable?

//How to deal with initial craft load (possible null returns from itemMap)
	Current version: possible things added to material if unfound
	fix: delete material and recreate properly? may have to transfer craftinto array

//public/private messups probably due to pass by value/reference shenanigans
to patch later

~~~~~~~~~~~~~~~~~~
2014/04/21 (HIGH)	CraftBuilders - Craftable.builder()
2014/04/13 (MED)	Colors in CraftComponentPanel.java, ItemInfoPanel.java, CraftIntoPanel.java
2014/04/13 (Minor)	'Save confirmation' dialog when saving prices
2014/04/13 (Forever)Recipes: AutoCraft to IV, AutoCraft Dolls to III, Dynamite, Net Trap [III].
2014/04/11 (MED)	CraftComponentPanel.java: title labels, convert to gridbaglayout, add profit ratios
2014/04/11 (MED)	ItemInfoPanel.java: easier to modify + more detail
2014/04/09 (HIGH)	fixed timestamps
2014/04/09 (MED)	boolean ___changed
2014/04/07 (MED+)	cleanup/comment/planning: model package, event
2014/04/02 (MED+)	cleanup/comment/planning: Manager, gui package
2014/03/30 (MED-)	GRAND REFACTORish. Information passed with listeners. Lots of cleanup to do though.
2014/03/21 (MED)	add craft books for workload prices, use menu selector to choose which workload to use
2014/03/20 (MED)	max wl, "updated # seconds ago"
2014/03/16 (HIGH)	Fix initial item load, added craft tree for Auto-Craft[ii]
2014/03/15 (MED)	Move worth from CraftComponentPanel into ItemInfoPanel, added Auto-Craft[i]
2014/03/14 (HIGH)	Split Item panel into craft/material panel and item detail panel
2014/03/13 (HIGH)	Basic CraftsInto Panel
2014/03/11 (HIGH)	Sum of Craft costs
2014/03/11 (HIGH)	Ratio of Profit/WL: currently as total size, redo to individual prices

~~~~~~~~~~~~~~~~~~~~



Menu: Import/Export Prices, Craft Books Dialog
	Update all price, then update 


Combobox: Recipe Type -> Recipe

Use Tree?
	Add Materials -> Add Craft/Recipes


Buttons: Click = Change to Item Crafted From
Labels: Displays Info (Workload, Number Required, Sell Value, Ratio, Last Price Update)
FormattedTextField: Pricing Changes
	When Changing Price: Update all ratios of CraftsInto (textfield only)


Tables: Name and Ratios of what it crafts into
	Move Recipe Combobox here?
	Name/Type/**Ratio**/LastUpdate

~~~

Item:
int SellValue
long LastPriceUpdate
List CraftsInto



2 Types of Items:
	long worth
	long cost
	String name
	byte type
	
Material: Disable all Buttons	

Craftable: Enable # of Buttons
	int NumberMade
	int Workload
	List CraftedFrom
	int CostToMake = Sum CraftedFrom SellValue
	double Ratio = NumberMade(Sell - Cost) / Workload

~~~

Pork 100
Wheat 100
Dumpling 1000

1 - Dumpling
Size 10
Workload 500
--- 4 Pork
--- 6 Wheat